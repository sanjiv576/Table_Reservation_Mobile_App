// Mocks generated by Mockito 5.4.2 from annotations
// in table_reservation_mobile_app/test/unit_test/food_menu_unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:table_reservation_mobile_app/core/failure/failure.dart' as _i6;
import 'package:table_reservation_mobile_app/features/food_menu/domain/entity/food_menu_entity.dart'
    as _i7;
import 'package:table_reservation_mobile_app/features/food_menu/domain/repository/food_menu_repository.dart'
    as _i2;
import 'package:table_reservation_mobile_app/features/food_menu/domain/use_case/food_menu_use_case.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIFoodMenuRepository_0 extends _i1.SmartFake
    implements _i2.IFoodMenuRepository {
  _FakeIFoodMenuRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FoodMenuUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFoodMenuUseCase extends _i1.Mock implements _i4.FoodMenuUseCase {
  @override
  _i2.IFoodMenuRepository get foodMenuRepository => (super.noSuchMethod(
        Invocation.getter(#foodMenuRepository),
        returnValue: _FakeIFoodMenuRepository_0(
          this,
          Invocation.getter(#foodMenuRepository),
        ),
        returnValueForMissingStub: _FakeIFoodMenuRepository_0(
          this,
          Invocation.getter(#foodMenuRepository),
        ),
      ) as _i2.IFoodMenuRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.FoodMenuEntity>>> getFoodMenu(
          String? restaurantId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFoodMenu,
          [restaurantId],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.FoodMenuEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.FoodMenuEntity>>(
          this,
          Invocation.method(
            #getFoodMenu,
            [restaurantId],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.FoodMenuEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.FoodMenuEntity>>(
          this,
          Invocation.method(
            #getFoodMenu,
            [restaurantId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.FoodMenuEntity>>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> addFoodItem(
          _i7.FoodMenuEntity? foodItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFoodItem,
          [foodItem],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #addFoodItem,
            [foodItem],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
                _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #addFoodItem,
            [foodItem],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> updateAFoodItem(
    String? foodItemId,
    _i7.FoodMenuEntity? foodItem,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAFoodItem,
          [
            foodItemId,
            foodItem,
          ],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #updateAFoodItem,
            [
              foodItemId,
              foodItem,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
                _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #updateAFoodItem,
            [
              foodItemId,
              foodItem,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> deleteAFoodItem(
          _i7.FoodMenuEntity? foodMenuEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAFoodItem,
          [foodMenuEntity],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #deleteAFoodItem,
            [foodMenuEntity],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
                _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #deleteAFoodItem,
            [foodMenuEntity],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);
}
