// Mocks generated by Mockito 5.4.2 from annotations
// in table_reservation_mobile_app/test/features/reservation/presentation/view/customer_reservation_history_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:table_reservation_mobile_app/core/failure/failure.dart' as _i5;
import 'package:table_reservation_mobile_app/features/reservation/domain/entity/reservation_entity.dart'
    as _i6;
import 'package:table_reservation_mobile_app/features/reservation/domain/use_case/reservation_use_case.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ReservationUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockReservationUseCase extends _i1.Mock
    implements _i3.ReservationUseCase {
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ReservationEntity>> createReservation(
    _i6.ReservationEntity? reservationEntity,
    String? restaurantId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createReservation,
          [
            reservationEntity,
            restaurantId,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.ReservationEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.ReservationEntity>(
          this,
          Invocation.method(
            #createReservation,
            [
              reservationEntity,
              restaurantId,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i6.ReservationEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.ReservationEntity>(
          this,
          Invocation.method(
            #createReservation,
            [
              reservationEntity,
              restaurantId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ReservationEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.ReservationEntity>>>
      getAllReservations() => (super.noSuchMethod(
            Invocation.method(
              #getAllReservations,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i6.ReservationEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.ReservationEntity>>(
              this,
              Invocation.method(
                #getAllReservations,
                [],
              ),
            )),
            returnValueForMissingStub: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i6.ReservationEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.ReservationEntity>>(
              this,
              Invocation.method(
                #getAllReservations,
                [],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, List<_i6.ReservationEntity>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> updateReservation(
    _i6.ReservationEntity? reservationEntity,
    String? reservationId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateReservation,
          [
            reservationEntity,
            reservationId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #updateReservation,
            [
              reservationEntity,
              reservationId,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
                _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #updateReservation,
            [
              reservationEntity,
              reservationId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> deleteReservation(
          String? reservationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteReservation,
          [reservationId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #deleteReservation,
            [reservationId],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
                _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #deleteReservation,
            [reservationId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ReservationEntity>> getAReservation(
          String? reservationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAReservation,
          [reservationId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.ReservationEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.ReservationEntity>(
          this,
          Invocation.method(
            #getAReservation,
            [reservationId],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i6.ReservationEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.ReservationEntity>(
          this,
          Invocation.method(
            #getAReservation,
            [reservationId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ReservationEntity>>);
}
