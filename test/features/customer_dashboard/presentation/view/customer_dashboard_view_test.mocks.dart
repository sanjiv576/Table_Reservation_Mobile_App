// Mocks generated by Mockito 5.4.2 from annotations
// in table_reservation_mobile_app/test/features/customer_dashboard/presentation/view/customer_dashboard_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:table_reservation_mobile_app/core/failure/failure.dart' as _i6;
import 'package:table_reservation_mobile_app/features/restaurant/domain/entity/favorite_entity.dart'
    as _i8;
import 'package:table_reservation_mobile_app/features/restaurant/domain/entity/restaurant_entity.dart'
    as _i7;
import 'package:table_reservation_mobile_app/features/restaurant/domain/entity/update_restaurant_entity.dart'
    as _i9;
import 'package:table_reservation_mobile_app/features/restaurant/domain/repository/restaurant_repository.dart'
    as _i2;
import 'package:table_reservation_mobile_app/features/restaurant/domain/use_case/restaurant_use_case.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIRestaurantRepository_0 extends _i1.SmartFake
    implements _i2.IRestaurantRepository {
  _FakeIRestaurantRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RestaurantUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestaurantUseCase extends _i1.Mock implements _i4.RestaurantUseCase {
  @override
  _i2.IRestaurantRepository get restaurantRepository => (super.noSuchMethod(
        Invocation.getter(#restaurantRepository),
        returnValue: _FakeIRestaurantRepository_0(
          this,
          Invocation.getter(#restaurantRepository),
        ),
        returnValueForMissingStub: _FakeIRestaurantRepository_0(
          this,
          Invocation.getter(#restaurantRepository),
        ),
      ) as _i2.IRestaurantRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.RestaurantEntity>> getARestaurant(
          String? restaurantId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getARestaurant,
          [restaurantId],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i7.RestaurantEntity>>.value(
                _FakeEither_1<_i6.Failure, _i7.RestaurantEntity>(
          this,
          Invocation.method(
            #getARestaurant,
            [restaurantId],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, _i7.RestaurantEntity>>.value(
                _FakeEither_1<_i6.Failure, _i7.RestaurantEntity>(
          this,
          Invocation.method(
            #getARestaurant,
            [restaurantId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.RestaurantEntity>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.RestaurantEntity>>>
      getAllRestaurants() => (super.noSuchMethod(
            Invocation.method(
              #getAllRestaurants,
              [],
            ),
            returnValue: _i5.Future<
                    _i3.Either<_i6.Failure, List<_i7.RestaurantEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.RestaurantEntity>>(
              this,
              Invocation.method(
                #getAllRestaurants,
                [],
              ),
            )),
            returnValueForMissingStub: _i5.Future<
                    _i3.Either<_i6.Failure, List<_i7.RestaurantEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.RestaurantEntity>>(
              this,
              Invocation.method(
                #getAllRestaurants,
                [],
              ),
            )),
          ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.RestaurantEntity>>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> createARestaurant(
          _i7.RestaurantEntity? restaurantEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #createARestaurant,
          [restaurantEntity],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #createARestaurant,
            [restaurantEntity],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
                _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #createARestaurant,
            [restaurantEntity],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i8.FavoriteEntity>> addFavoriteRestaurant(
          String? restaurantId) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFavoriteRestaurant,
          [restaurantId],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i8.FavoriteEntity>>.value(
                _FakeEither_1<_i6.Failure, _i8.FavoriteEntity>(
          this,
          Invocation.method(
            #addFavoriteRestaurant,
            [restaurantId],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, _i8.FavoriteEntity>>.value(
                _FakeEither_1<_i6.Failure, _i8.FavoriteEntity>(
          this,
          Invocation.method(
            #addFavoriteRestaurant,
            [restaurantId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i8.FavoriteEntity>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> deleteFavoriteRestaurant(
    String? restaurantId,
    String? favoriteId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteFavoriteRestaurant,
          [
            restaurantId,
            favoriteId,
          ],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #deleteFavoriteRestaurant,
            [
              restaurantId,
              favoriteId,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
                _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #deleteFavoriteRestaurant,
            [
              restaurantId,
              favoriteId,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> getAllFavoriteRestaurants() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllFavoriteRestaurants,
          [],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #getAllFavoriteRestaurants,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
                _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #getAllFavoriteRestaurants,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, bool>> updateUserAndRestaurant(
          _i9.UpdateRestaurantEntity? restaurantEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserAndRestaurant,
          [restaurantEntity],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
            _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #updateUserAndRestaurant,
            [restaurantEntity],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, bool>>.value(
                _FakeEither_1<_i6.Failure, bool>(
          this,
          Invocation.method(
            #updateUserAndRestaurant,
            [restaurantEntity],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, bool>>);
}
